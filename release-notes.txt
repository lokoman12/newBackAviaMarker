RELEASE NOTES

1.0.0
----------------------------------

Bug fixes
- Временно отключил модули Пулково для Шарика. Надо сделать, чтобы соответствующие сервисы не поднималимсь в зависимости от профиля: Шарик или Пулково из profile в .env
- Если нет соединения с кафкой, бэк падал. Добавил обработчик ошибки. Нужно в дальнейшем добавить периодические проверки с попытками подсоединения
- Вызов ручки сброса статуса таймлайна не должен ломаться, просто выводим в лог сообщение об ошибке


Features
- Переменная для логания logger, единообразно
- winston логгер, все логи в папку ./logs корня проекта
- Копирование истории для третички, первички, парковок, машинок и метео
- Скрипт для создания таблиц истории npm run db:create-history-tables
- Отдельные проперти для шедулинга копирования истории, чистка истории свыше X дней
- Проверка при старте нужных приложению сеттингов в .env файле
- Добавил интерфейсы для запроса состояния аэропорта одной ручкой, а не пачкой запросов по каждому типу. Ручка возврата состояния аэропорта готова
- Копирование истории на бэке можно отключить флагом disableCopyHistory в файле .env
- Начал переделывать сервис истории, чтобы была одна точка входа для всех 5 таблиц истории, и не было копипасты по каждой таблице
- Вместо аннотации Table пакета sequelize-typescript, используем рукописную TableModel. Она вызывает предыдущую, но делает параметр tableName обязательным
- Переделана логика возврата истории. Убрана копипаста, логика разнесена по методам и модулям
- Переделал копирование истории. Медленно работало. Убрал ожидания в циклах, построчную вставку. Теперь работает через buikInsert
- Переделал получение актуальной третички ради ускорения. Формуляр джойнится с третичкой на уровне базы

Refactoring
- Переделал логику с формированием таблиц истории, чтобы не было копипасты с кучей прямых sql запросов. Собираю sql'ли чистки и формирования исторических таблиц на лету.
- Переделал логику инициализации TimelineRecordDto (настройки воспроизведения, хранящиеся в базе и передаваемые на фронт). Добавил перегрузку конструктора, сделал инициализацию через декомпозицию. Исправил баги с инициализацией

ToDo
- Нужно по аналогии с toi/toi history вызывать внутри tryFillInUserHistoryTable метод prepareUserHistoryTable для каждой из 5 исторических таблиц. А потом заполнять номерные таблицы данными из основных таблиц истории. Пока не придумал, надо ли хранить в настройках единый шаг для всех таблиц или по каждой таблице. Склоняюсь к варианту хранения по каждой таблице. Потому что сохранение может стартовать неодновременно, и исторические данные будут отличаться долями секунды